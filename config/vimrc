colorscheme peachpuff
syntax on
set number
set ruler
set incsearch
set hlsearch
set mouse=a
set updatetime=100

set autoindent
set cindent
set smartindent
set expandtab 
set backspace=2
set shiftwidth=4
set softtabstop=4
set tabstop=4
autocmd FileType html,css,javascript,ruby,c,cpp set ts=2 sts=2 sw=2
autocmd FileType markdown,yaml,vim,sh,zsh set ts=2 sts=2 sw=2

highlight Visual ctermbg=0
" highlight Comment ctermfg=20
" highlight Directory ctermfg=20

highlight CursorLine cterm=bold
highlight CursorLineNR cterm=bold
set cursorline

highlight SignColumn guibg=#000000 ctermbg=0
set signcolumn=yes

highlight ColorColumn ctermbg=235 guibg=#2c2d27
let &colorcolumn='80,100'

highlight User1 ctermfg=1
highlight User2 ctermfg=3
highlight User3 ctermfg=2
highlight User4 ctermfg=6
highlight User5 ctermfg=7
set laststatus=2
set statusline=%5*üìÅ%<%{CurDir()}/ 
set statusline+=\ üìù%2*%f%m
set statusline+=%1*\ (%{&fenc}:%Y)\ %4*
set statusline+=%=\ üîé\ Ln\ %l/%L\,\ Col\ %c\ (%p%%)


""" vim-plug
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
endif
autocmd VimEnter * if len(filter(values(g:plugs), '!isdirectory(v:val.dir)')) | PlugInstall --sync | source ${MYVIMRC} | endif

call plug#begin('~/.vim/plugged')
Plug 'airblade/vim-gitgutter'
Plug 'jiangmiao/auto-pairs'
call plug#end()

""" airblade/vim-gitgutter
highlight GitGutterAdd    guifg=#009900 ctermfg=2
highlight GitGutterChange guifg=#bbbb00 ctermfg=3
highlight GitGutterDelete guifg=#ff2222 ctermfg=1

""" jiangmiao/auto-pairs
autocmd FileType html let b:AutoPairs = AutoPairsDefine({'<!--' : '-->'}, ['{'])


map <F2> :wa<CR>:EXEC 
map <F3> :call CopyPasteToggle()<CR>
map <F5> gT
map <F6> gt
map <F9> :MARK 
imap <F3> <ESC><F3>a
command -nargs=* EXEC execute EXEC(<q-args>)
command -nargs=* MARK execute MARK(<q-args>)


function CopyPasteToggle()
  if &nu == 1
    set nonumber
    set paste
    set mouse=
    set signcolumn=no
  else
    set number
    set nopaste
    set mouse=a
    set signcolumn=yes
  endif
endfunction

function! CurDir()
  let curdir = substitute(getcwd(), $HOME, '~', '')
  return curdir
endfunction

function EXEC(args)
  let cpl = ''
  if filereadable('.vimexec')
    let exc = './.vimexec % '
  elseif filereadable('makefile') || filereadable('Makefile')
    let exc = 'make'
  elseif( &ft == 'cpp')
    let cpl = 'g++ -o %:r -std=c++14 -Wall -Wextra -pedantic % && ' |
    let exc = './%:r'
  elseif( &ft == 'c')
    let cpl = 'gcc -o %:r -Wall -Wextra -pedantic % && ' |
    let exc = './%:r'
  elseif( &ft == 'java')
    let cpl = 'javac % && ' |
    let exc = 'java %:r'
  elseif( getline(1) =~ 'python3')
    let exc = 'python3 %'
  elseif( getline(1) =~ 'python2')
    let exc = 'python2 %'
  elseif( &ft == 'python')
    let exc = 'python %'
  elseif( getline(1) =~ 'bash')
    let exc = 'bash %'
  elseif( getline(1) =~ 'zsh')
    let exc = 'zsh %'
  elseif( &ft == 'sh')
    let exc = 'sh %'
  elseif( &ft == 'verilog')
    let cpl = 'iverilog % -o %:r.exe && ' |
    let exc = './%:r.exe'
  elseif( &ft == 'ruby')
    let exc = 'ruby %'
  elseif( &ft == 'tex')
    let cpl = 'pdflatex % && ' |
    let exc = ''
  else
    let exc = './%'
  endif

  if !exists('exc')
    echo 'Can''t run this filetype ...'
    return
  else
    if cpl != ''
      let cp_r = 'echo -e "\e[1;33m[Compiling] $(date)\e[0m" && ' . cpl . 'echo -e "\e[1;32m[Running] $(date)\e[0m" && time ' . exc
    else
      let cp_r = 'echo -e "\e[1;32m[Running] $(date)\e[0m" && time ' . exc
    endif
  endif

  return '!clear;' . cp_r . ' ' . a:args . '; echo -e "\e[1;31m[Terminated][$?] $(date)\e[0m\a"'
endfunction

function MARK(cols)
  let clist = split(a:cols, ' ') 
  if len(clist) == 0
    let &colorcolumn='999'
  else
    for col in clist
      let &colorcolumn=col . ',' . &colorcolumn
    endfor
  endif
endfunction
